server.port=8080
spring.application.name=supreme-message
spring.profiles.active=liteflow

# Redis配置
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}

# MySQL配置
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${DATABASE_NAME}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}

# MongoDB配置
spring.data.mongodb.uri=mongodb://${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_DATABASE_NAME}
spring.data.mongodb.username=${MONGODB_USERNAME}
spring.data.mongodb.password=${MONGODB_PASSWORD}

# kafka配置
spring.cloud.bus.enabled=true
spring.cloud.bus.refresh.enabled=true
spring.cloud.bus.id=${spring.application.name}
spring.cloud.bus.trace.enabled=true

spring.cloud.stream.kafka.binder.auto-create-topics=true
spring.cloud.stream.kafka.binder.min-partition-count=2

spring.cloud.stream.bindings.springCloudBusInput.group=bus-group
spring.cloud.stream.bindings.springCloudBusOutput.producer.header-mode=none

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.include=bus-refresh,health,info


# springdoc-openapi项目配置
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.api-docs.path=/v3/api-docs
springdoc.group-configs[0].group=default
springdoc.group-configs[0].paths-to-match=/**
springdoc.group-configs[0].packages-to-scan=club.supreme.message
# knife4j的增强配置，不需要增强可以不配
knife4j.enable=true
knife4j.setting.language=zh_cn